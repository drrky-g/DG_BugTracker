@model DG_BugTracker.Models.Ticket

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>
<!-- Misc Details-->
<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12">
        <div class="card">
            <div class="card-header card-header-primary">
                <h4>
                    Ticket: @Model.Title
                </h4>
            </div>
            <div class="card-body">
                Id Number: @Model.Id)
                <br />
                <hr />
                Project Name: @Model.Project.Name
                <br />
                <hr />
                Description: @Model.Description
            </div>
        </div>
    </div>
</div>
<!-- Team Members -->
<div class="row">
    <!-- Submission Card-->
    <div class="col-lg-6 col-md-6 col-sm-6">
        <div class="card card-stats">
            <div class="card-header card-header-success card-header-icon">
                <div class="card-icon">
                    <i class="material-icons">content_copy</i>
                </div>
                <p class="card-category">Submitter:</p>
                <h4 class="card-title text-success">
                    @Model.OwnerUser.FullName <!-- may be blank because i made the ticket without being logged in -->
                </h4>
            </div>
            <div class="card-footer">
                <div class="stats">
                    <i class="material-icons">access_time</i> Submitted on: @Model.Created
                </div>
            </div>
        </div>
    </div>
    <!-- Developer Card-->
    <div class="col-lg-6 col-md-6 col-sm-6">
        <div class="card card-stats">
            <div class="card-header card-header-primary card-header-icon">
                <div class="card-icon">
                    <i class="material-icons">code</i>
                </div>
                <p class="card-category">Developer:</p>
                @if (Model.AssignedToUser == null)
                {
                    if (User.IsInRole("Project Manager") || User.IsInRole("Admin"))
                    {
                        @Html.ActionLink("ASSIGN DEV", "Edit", "Tickets", new { id = Model.Id }, htmlAttributes: new { @class = "text-danger"})
                    }
                    else
                    {
                        <h4 class="card-title text-danger">
                            Unassigned
                        </h4>
                    }

                }
                else
                {
                    <h4 class="card-title">
                        @Model.AssignedToUser.DisplayName)
                    </h4>
                }

            </div>
            <div class="card-footer">
                <div class="stats">
                    <i class="material-icons">update</i>Updated on: @Html.DisplayFor(model => model.Updated)
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Ticket Tags-->
<div class="row">
    <!-- Ticket Type -->
    <div class="col-lg-4 col-md-4 col-sm-4">
        <div class="card card-stats">
            <div class="card-header card-header-warning card-header-icon">
                <div class="card-icon">
                    <i class="material-icons">local_offer</i>
                </div>
                <p class="card-category">Type:</p>
                <h4 class="card-title text-warning">
                    @Model.TicketType.Name
                </h4>
            </div>
            <div class="card-footer">
                <div class="stats">
                    @Html.ActionLink("View all" ,"Index", "TicketTypes", htmlAttributes: new { @class = "btn-link btn-sm btn-warning"})
                </div>
            </div>
        </div>
    </div>
    <!-- Ticket Status -->
    <div class="col-lg-4 col-md-4 col-sm-4">
        <div class="card card-stats">
            <div class="card-header card-header-warning card-header-icon">
                <div class="card-icon">
                    <i class="material-icons">local_offer</i>
                </div>
                <p class="card-category">Status:</p>
                <h4 class="card-title text-warning">
                    <!-- needs to be fixed in model, i forgot to provide virtual nav-->
                    @Model.TicketStatus.Name
                </h4>
            </div>
            <div class="card-footer">
                <div class="stats">
                    @Html.ActionLink("View all", "Index", "TicketStatuses", htmlAttributes: new { @class = "btn-link btn-sm btn-warning" })
                </div>
            </div>

        </div>
    </div>
    <!-- Ticket Priority -->
    <div class="col-lg-4 col-md-4 col-sm-4">
        <div class="card card-stats">
            <div class="card-header card-header-warning card-header-icon">
                <div class="card-icon">
                    <i class="material-icons">local_offer</i>
                </div>
                <p class="card-category">Priority:</p>
                <h4 class="card-title text-warning">
                    @Model.TicketPriority.Name
                </h4>
            </div>
            <div class="card-footer">
                <div class="stats">
                    @Html.ActionLink("View all", "Index", "TicketPriorities", htmlAttributes: new { @class = "btn-link btn-sm btn-warning" })
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Collections -->
<div class="row">
    <!-- Ticket Comments -->
    <div class="col-lg-6 col-md-6 col-sm-6">
        <div class="card">
            <div class="card-header card-header-success">
                <h4>
                    Comments
                    <button class=" float-right btn btn-link btn-fab btn-round" data-toggle="modal" data-target="#commentForm">
                        <i class="material-icons" style="color: white;">note_add</i>
                    </button>
                </h4>
                
            </div>
            <div class="card-body">
                @if (Model.TicketComments.Count == 0)
                {
                    <i class="text-success"> There are no comments for this ticket.</i>
                }
                else
                {
                    foreach (var ticketComment in Model.TicketComments.OrderByDescending(comment => comment.Created))
                    {
                        <p><b>Posted by @ticketComment.User.FullName :</b>  <i>@ticketComment.Body</i></p>
                        <hr />
                    }
                }
            </div>
        </div>
    </div>
    <!-- Ticket Attachments -->
    <div class="col-lg-6 col-md-6 col-sm-6">
        <div class="card">
            <div class="card-header card-header-success">
                <h4>
                    Attachments
                    <button class=" float-right btn btn-link btn-fab btn-round" data-toggle="modal" data-target="#attachForm">
                        <i class="material-icons" style="color: white;">note_add</i>
                    </button>
                </h4>
                
            </div>
            <div class="card-body">
                @if (Model.TicketAttachments.Count == 0)
                {
                    <i class="text-success"> There are no attachments for this ticket.</i>
                }
                else
                {
                    foreach (var ticketAttachment in Model.TicketAttachments.OrderByDescending(attachment => attachment.Created))
                    {
                        <div class="row">
                            <!-- attachment author-->
                            <div class="col-md-3 col-lg-3 col-sm-3">
                                @ticketAttachment.User.FullName
                            </div>
                            <div class="col-sm-2 col-md-2 col-lg-2">
                                @ticketAttachment.Created.ToString("MMMM dd, yyyy")
                                <!-- check string formatting?-->
                            </div>
                            <!-- display file path-->
                            <div class="col-sm-2 col-md-2 col-lg-2">
                                <!-- takes file path and splits it for the selected icon, [x] x= array position-->
                                <!-- /Uploads/FileAttachment1.pdf -->
                                @ticketAttachment.FilePath.Split('/')[2].Split('.')[0];
                                <!-- this will output 'FileAttachment' -->
                                <!-- experiment with Path object linq statements-->
                                <!-- Path.GetFileNameWithoutExtension(ticketAttachment.FilePath)-->
                            </div>
                            <!-- description-->
                            <div class="col-md-4 col-lg-4 col-sm-4">
                                @ticketAttachment.Description
                            </div>
                            <div class="col-md-1 col-lg-1 col-sm-1">
                                <!-- Eventually this will be a download link-->
                                <a href="@ticketAttachment.FilePath" target="_blank" class="btn btn-sm btn.link">Download</a>
                            </div>
                        </div>
                        <hr />
                    }
                }

            </div>
        </div>
    </div>
</div>
<!-- Ticket History -->
<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12">
        <div class="card">
            <div class="card-header card-header-danger">
                <h4>
                    History
                    <button class="float-right btn btn-link btn-fab btn-round" data-toggle="modal" data-target="#historyForm">
                        <i class="material-icons" style="color: white;">note_add</i>
                    </button>
                </h4>
            </div>
            <div class="card-body">
                @if (Model.TicketHistories.Count == 0)
                {
                    <i class="text-danger">There are no history entries for this ticket yet.</i>
                }
                else
                {
                    foreach(var ticketHistory in Model.TicketHistories.OrderByDescending(history => history.Changed))
                    {
                        <div class="row">
                            <div class="col-md-3 col-lg-3 col-sm-3">
                                @ticketHistory.User.FullName
                            </div>
                            <div class="col-md-3 col-lg-3 col-sm-3">
                                @ticketHistory.Property
                            </div>
                            <div class="col-md-3 col-lg-3 col-sm-3">
                                @ticketHistory.OldValue
                            </div>
                            <div class="col-sm-3 col-md-3 col-lg-3">
                                @ticketHistory.NewValue
                            </div>
                        </div>
                        <hr />
                    }
                }
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12 col-sm-12 col-lg-12">
        @Html.ActionLink("Edit This Ticket", "Edit", new { id = Model.Id }, htmlAttributes: new { @class = "btn btn-link btn-warning" }) |
        @Html.ActionLink("Back to List", "MyIndex", null, htmlAttributes: new { @class = "btn btn-link btn-info" })
    </div>
</div>
<!-- Form Modals -->

<!-- Create | Ticket Attachment (To-Do) -->
<div class="modal fade" id="attachForm" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="form">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add an Attachment</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <i class="material-icons">clear</i>
                </button>
            </div>
            <div class="modal-body">
                <!--body -->
                @using (Html.BeginForm("Create", "TicketAttachments", FormMethod.Post, new { @class = "form", enctype = "Multipart/form-data"}))
                {
                    @Html.AntiForgeryToken();
                    @Html.Hidden("TicketId", Model.Id)
                    <div class="row">
                        <div class="col-md-12 col-sm-12 col-lg-12">
                            @Html.ValidationSummary(true, "", new { @class= "text-danger"})
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-12 col-lg-12 col-sm-12">
                            <!-- RENAME DESCRIPTION PROPERTY OR IT WILL ASSOCIATE WITH TICKET DESCRIPTION -->
                            <input  type="text" name="attachmentDescription" id="attachmentDescription" class="form-control text-success" placeholder="Description"/>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12 col-lg-12 col-sm-12">
                            <input type="file" name="FilePath" id="filePath" class="form-control text-success" placeholder="Upload a file"/>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12 col-sm-12 col-lg-12">
                            <button type="submit" class="btn btn-link btn-info">Upload Attachment</button>
                        </div>
                    </div>

                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-link">Nice Button</button>
                <button type="button" class="btn btn-danger btn-link" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<!-- Create | Ticket History (Done)-->
<div class="modal fade" id="historyForm" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="form">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title has-white">Create a History Entry</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <i class="material-icons">clear</i>
                </button>
            </div>
            @using (Html.BeginForm("Create", "TicketHistories", FormMethod.Post))
            {
                <div class="modal-body">

                    @Html.AntiForgeryToken()
                    @Html.Hidden("TicketId", Model.Id)
                    <div class="row">
                        <div class="col-md-12 col-sm-12 col-lg-12">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <!-- property field-->
                        <label class="col-md-12 control-label">
                            Property:
                        </label>
                        <div class="col-lg-10 col-md-10 col-sm-10">
                            <input name="property" class="form-control text-primary" placeholder="What was changed?"/>
                        </div>
                    </div>
                    <!-- old value field-->
                    <div class="form-group">
                        <label class="col-md-12 control-label">
                            Old Value:
                        </label>
                        <div class="col-lg-10 col-md-10 col-sm-10">
                            <input name="oldValue" class="form-control text-primary" placeholder="What was the original value?" />
                        </div>
                    </div>
                    <!-- new value field -->
                    <div class="form-group">
                        <label class="col-md-12 control-label">
                            New Value:
                        </label>
                        <div class="col-lg-10 col-md-10 col-sm-10">
                            <input name="newValue" class="form-control text-primary" placeholder="What did you change it to?" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-link btn-success">Submit</button>
                    <button class="btn btn-danger btn-link" data-dismiss="modal">Close</button>
                </div>
            }
        </div>
    </div>
</div>
<!-- Create | Ticket Comment (Done) -->
<div class="modal fade" id="commentForm" tabindex="-1" role="dialog">
    <div class="modal-dialog bg-dark" role="form">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add a Comment</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <i class="material-icons">clear</i>
                </button>
            </div>
       @using (Html.BeginForm("Create", "TicketComments", FormMethod.Post))
        {
        <div class="modal-body">
            @Html.AntiForgeryToken()
            @Html.Hidden("TicketId", Model.Id)
            <div class="row">
                <div class="col-md-12 col-sm-12 col-lg-12">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                </div>
            </div>
            <!-- body field field-->
            <div class="form-group">
                <label class="col-md-12 control-label">
                    Comment:
                </label>
                <div class="col-lg-10 col-md-10 col-sm-10">
                    <input name="commentBody" class="form-control text-primary" placeholder="Write a comment.." />
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="submit" class="btn btn-success btn-link">Submit</button>
            <button type="button" class="btn btn-danger btn-link" data-dismiss="modal">Close</button>
        </div>
        }
        </div>
    </div>
</div>
