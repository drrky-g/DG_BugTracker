@model DG_BugTracker.Models.Ticket

@{
    ViewBag.Title = "Edit";
    ViewBag.Header = "Edit Ticket";
    ViewBag.Subheader = $"Modify Ticket {Model.Id} ({Model.Title})";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="form-horizontal" style="padding-top: 50px;">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.ProjectId)
    @Html.HiddenFor(model => model.Created)
    @Html.HiddenFor(model => model.OwnerUserId)
    @if (User.IsInRole("Submitter") || User.IsInRole("Developer"))
    {
        @Html.HiddenFor(model => model.TicketStatusId)
        @Html.HiddenFor(model => model.TicketPriorityId)
        @Html.HiddenFor(model => model.TicketTypeId)
    }

    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>


    <!-- Admin/ PM Only fields-->
    @if (User.IsInRole("Admin") || User.IsInRole("Project Manager"))
    {
        <div class="form-group">
            @Html.LabelFor(model => model.TicketTypeId, "TicketTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TicketPriorityId, "TicketPriorityId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TicketStatusId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.AssignedToUserId, "AssignedToUserId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AssignedToUserId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AssignedToUserId, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn bg-brand-primary-solid" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to Dashboard", "Dashboard", "Home")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
