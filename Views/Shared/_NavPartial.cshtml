@using DG_BugTracker.ViewModels
@model UserProfileViewModel

<nav class="navbar navbar-color-on-scroll navbar-transparent fixed-top navbar-expand-lg" color-on-scroll="100">
    <div class="container">
        <div class="navbar-translate">
            <!-- Nav Branding -->
            <a class="navbar-brand" href="@Url.Action("Dashboard", "Home")">
                <i class="material-icons">bug_report</i>
                BugTracker
            </a>
            <!-- Responsive Toggle -->
            <button class="navbar-toggler" type="button" data-toggle="collapse" aria-expanded="false" aria-label="Toggle navigation">
                <span class="sr-only">Toggle navigation</span>
                <span class="navbar-toggler-icon"></span>
                <span class="navbar-toggler-icon"></span>
                <span class="navbar-toggler-icon"></span>
            </button>
        </div>
        <div class="collapse navbar-collapse">
            <!-- Nav List -->
            <ul class="navbar-nav ml-auto">
                <li class="nav-item">
                    <a href="@Url.Action("Dashboard", "Home")" class="nav-link">
                        <i class="material-icons">home</i>
                        Home
                    </a>
                </li>
               @if (User.IsInRole("Submitter"))
               {
                   <li class="nav-item">
                       <a href="@Url.Action("Create", "Tickets")" class="nav-link">
                           <i class="material-icons">description</i>
                           New Ticket
                       </a>
                   </li>
               }
                <li class="nav-item">
                    <a href="@Url.Action("ArchiveIndex", "Tickets")" class="nav-link">
                        <i class="material-icons">list</i>
                        Ticket Archive
                    </a>
                </li>
                @if (User.IsInRole("Admin") || User.IsInRole("Project Manager"))
                {
                    <li class="nav-item">
                        <a href="@Url.Action("UserIndex", "RoleManagement")" class="nav-link">
                            <i class="material-icons">supervisor_account</i>
                            User Index
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="@Url.Action("Create", "Projects")" class="nav-link">
                            <i class="material-icons">description</i>
                            New Project
                        </a>
                    </li>
                }
                
                <li class="nav-item">
                    <a href="#" data-toggle="modal" data-target="#profileModal" class="nav-link">
                        <img src="@Model.AvatarPath" class="img-raised rounded-circle img-fluid" style="height: 30px; width: 30px; margin-right: 8px;" />
                        Account
                    </a>
                </li>

            @if (User.Identity.IsAuthenticated)
            {
                <li class="nav-item">
                    <a href="@Url.Action("LogOff", "Account")" class="nav-link">
                        <i class="material-icons">exit_to_app</i>
                        Log Out
                    </a>
                </li>
            }
            </ul>
        </div>
    </div>
</nav>

<!-- profile edit modal -->
<div class="modal fade" id="profileModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="form">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="text-center brand-primary-color">
                    Update Your Profile
                </h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <i class="material-icons">clear</i>
                </button>
            </div>
            @using (Html.BeginForm("ChangeUserProfile", "Manage", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.Id)
                <div class="modal-body">
                    <div class="row">
                        <label class="control-label text-left col-md-12">
                            First Name:
                        </label>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <!-- input -->
                            @Html.TextAreaFor(model => model.FirstName, new { @class = "form-control", rows = "1", placeholder = Model.FirstName })
                        </div>
                    </div>
                    <div class="row">
                        <label class="control-label text-left col-md-12">
                            Last Name:
                        </label>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <!-- input -->
                            @Html.TextAreaFor(model => model.LastName, new { @class = "form-control", rows = "1", placeholder = Model.LastName })
                        </div>
                    </div>
                    <div class="row">
                        <label class="control-label text-left col-md-12">
                            Email:
                        </label>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <!-- input -->
                            @Html.TextAreaFor(model => model.Email, new { @class = "form-control", rows = "1",placeholder = Model.Email})
                        </div>
                    </div>
                    <div class="row">
                        <label class="control-label text-left col-md-12">
                            Avatar:
                        </label>
                        <div class="col-md-12">
                            <!-- input -->
                            @Html.TextBoxFor(model => model.AvatarPath, new { @class="form-control", rows="1", type="file", placeholder = Model.AvatarPath})
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    @Html.ActionLink("Change Password", "ChangePassword", "Manage", null, htmlAttributes: new { @class = "btn btn-link brand-primary-color" })
                    <button class="btn btn-link brand-secondary-color" type="submit">Update</button>
                    <button class="btn btn-link btn-danger" data-dismiss="modal">Close</button>
                </div>
            }
        </div>
    </div>
</div>




